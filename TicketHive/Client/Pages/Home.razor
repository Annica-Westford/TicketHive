@page "/home"
@using Microsoft.AspNetCore.Authorization;
@using TicketHive.Client.Api;
@using TicketHive.Shared;
@using TicketHive.Shared.Api;
@attribute [Authorize]
@inject IEventsService eventsService 
@inject AuthenticationStateProvider provider
@inject NavigationManager navigationManager
@inject ILocalStorageService localStorage
@inject ICartService cartService

<h1 id="title">Search for your next event</h1>
<div class="search">
    <input id="searchbar" type="text" @bind-value="@searchWord" placeholder="Keyword" />
    <button id="searchbtn" class="btn btn-primary" @onclick="@(() => SearchForEvent())">Search</button>
    <button id="eventbtn" class="btn btn-primary" @onclick="(() => ShowAllEvents())">Show all events</button>
</div>
@if (eventsBought != null && eventsBought.Count > 0)
{
    <p class="attending">You are already attending: 

@*    @foreach (var eventBought in eventsBought)
    {
            string eventHref = $"/eventdetails/{eventBought.Id}";
            <span><a href="@eventHref">@eventBought.Name</a>, </span>
    }*@

    @for (int i = 0; i < eventsBought.Count; i++)
        {
            string eventName = eventsBought[i].Name;
            string eventHref = $"/eventdetails/{eventsBought[i].Id}";
            if (i > 0)
            {
                <span>, </span>
            }
            <span><a href="@eventHref">@eventName</a></span>
        }
    </p>
}

@if (popularEvents != null)
{
    <h1 class="popular-events">Most popular events:</h1>
    <div class="row movie-list">
        @foreach (var eventToDisplay in popularEvents)
    {
        string eventImage = $"/Images/{eventToDisplay.Image}.png";
        <div class="image-container">
        <h3>@popularityPosition) @eventToDisplay.Name</h3>
        <p>People attending: @eventToDisplay.SoldTickets</p>
        <img src="@eventImage"/>
        <button class="btn btn-primary" @onclick="(() => ShowEvent(eventToDisplay.Id))">Read more</button>
        </div>
        popularityPosition++;
    }
    </div>
}

<div class="fullscreen">
    <div class="background"></div>
    <video loop muted autoplay>
        <source src="/video3.mp4" type="video/mp4">
    </video>
</div>

@code {

    private List<EventModel>? popularEvents = null;
    private List<EventModel>? eventsBought;
    private string searchWord;
    private int popularityPosition = 1;

    protected override async Task OnInitializedAsync()
    {
        // Hämtar alla populära events, sorterar dom och visar top 3 baserat på sålda biljetter
        List<EventModel> allEvents = await eventsService.GetAllEventsAsync();
        List<EventModel> sortedPopularEvents = allEvents.OrderByDescending(s => s.SoldTickets).ToList();
        popularEvents = sortedPopularEvents.Take(3).ToList();

        // Laddar cookies
        await cartService.LoadCookies();

        // Hämtar alla events som användaren har biljetter till
        var authState = await provider.GetAuthenticationStateAsync();
        var name = authState.User.Identity.Name;
        eventsBought = await eventsService.GetAllEventsFromUserAsync(name);
    }

    void ShowEvent(int id)
    {
        navigationManager.NavigateTo($"/eventdetails/{id}");
    }

    void ShowAllEvents()
    {
        navigationManager.NavigateTo("/events");
    }

    void SearchForEvent()
    {
        navigationManager.NavigateTo($"/events/{searchWord}");
    }
}
