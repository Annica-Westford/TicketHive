@page "/account"
@using Microsoft.AspNetCore.Authorization;
@using System.ComponentModel.DataAnnotations;
@using TicketHive.Shared.Enums;
@attribute [Authorize]
@inject IIdentityService identityService
@inject AuthenticationStateProvider authStateProvider

<AlertMessage IsVisible="@showAlert" Message="@alertMessage" Type="@alertType"/>

<div class="fullscreen">
    <video loop muted autoplay>
        <source src="/video2.mp4" type="video/mp4">
    </video>
</div>

<div class="back">
    <div class="div-center">
        <div class="content">
            <EditForm Model="changePassword" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="form-group">
                    <label for="currentPassword">Current Password</label>
                    <InputText id="currentPassword" @bind-Value="changePassword.CurrentPassword" class="form-control" type="password"></InputText>
                    <ValidationMessage For="() => changePassword.CurrentPassword" />
                </div>
                <div class="form-group">
                    <label for="newPassword">New Password</label>
                    <InputText id="newPassword" @bind-Value="changePassword.NewPassword" class="form-control" type="password"></InputText>
                    <ValidationMessage For="() => changePassword.NewPassword" />
                </div>
                <div class="form-group">
                    <label for="confirmPassword">Confirm Password</label>
                    <InputText id="confirmPassword" @bind-Value="changePassword.ConfirmPassword" class="form-control" type="password"></InputText>
                    <ValidationMessage For="() => changePassword.ConfirmPassword" />
                </div>
                <button type="submit" class="btn btn-primary">Change Password</button>
            </EditForm>

            <form @onsubmit="UpdateCountry">
                <div class="form-group">
                    <label for="country-select">Select New Country:</label>
                    <select class="form-control" id="country-select" @bind="@selectedCountry">
                        <option value="">--Select a country--</option>
                        @foreach (var country in Enum.GetValues(typeof(Countries)))
                        {
                            <option value="@country.ToString()">@country</option>
                        }
                    </select>
                    <button type="submit" class="btn btn-primary">Update Country</button>
                </div>
            </form>
            
            
        <div>
                
    </div>
            
</div>
</div>
</div>

@code {
    private string userName;
    private ChangePasswordModel changePassword = new();
    private string selectedCountry;
    private bool showAlert = false;
    private string alertMessage;
    private string alertType;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        userName = user.Identity!.Name;

        selectedCountry = await identityService.GetUserCountryAsync(userName);

        //bool hasChangedCountrySuccessfully = await identityService.UpdateUserCountryAsync(userName, "Bulgaria");

    }

    private async Task HandleValidSubmit()
    {
        showAlert = true;

        if (userName != null)
        {            
            bool hasChangedPasswordSuccessfully = await identityService.ChangePasswordAsync(userName, changePassword.CurrentPassword, changePassword.NewPassword);

            if (hasChangedPasswordSuccessfully)
            {
                //Clear input fields
                changePassword = new();

                alertMessage = "Password changed successfully!";
                alertType = "success";

                //behöver förmodligen lägga till detta i repo/controller/service
                //await SignInManager.RefreshSignInAsync(user);
            }
            else
            {
                alertMessage = "Failed to change the password";
                alertType = "danger";
            }
        }
        else
        {
            alertMessage = "Oh no! Something went wrong...";
            alertType = "danger";
        }
    }

    private void UpdateCountry()
    {
        
    }
}
